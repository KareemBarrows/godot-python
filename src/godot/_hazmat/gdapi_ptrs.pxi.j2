# /!\ Autogenerated code, modifications will be lost /!\
# see `scripts/generate_tmpl.py`

from .gdnative_interface cimport *


# Builtins
{% for spec in api["builtins"] if not spec.is_scalar %}

##############################################################################
#{{ "{:^76}".format(spec.name) }}#
##############################################################################

{%   for c in spec.constructors %}
cdef GDNativePtrConstructor __{{ spec.name }}_constructor_{{ c.index }} = pythonscript_gdapi.variant_get_ptr_constructor(
    {{ spec.variant_type_name }}, {{ c.index }}
)
{%   endfor %}

{%   if spec.has_destructor %}
cdef GDNativePtrDestructor __{{ spec.name }}_destructor = pythonscript_gdapi.variant_get_ptr_destructor(
    {{ spec.variant_type_name }}
)
{%   endif %}

{%   for m in spec.methods %}
cdef GDNativePtrBuiltInMethod __{{ spec.name }}_meth_{{ m.name }} = pythonscript_gdapi.variant_get_ptr_builtin_method(
    {{ spec.variant_type_name }}, "{{ m.original_name }}", {{ m.hash }}
)
{%   endfor %}

{%   for o in spec.operators %}
cdef GDNativePtrOperatorEvaluator __{{ spec.name }}_op_{{ o.name }} = pythonscript_gdapi.variant_get_ptr_operator_evaluator(
    {{ o.variant_operator_name }}, {{ spec.variant_type_name }}, {{ o.right_type.variant_type_name }}
)
{%   endfor %}

{% endfor %}

##############################################################################
#                              Utility functions                             #
##############################################################################

{% for spec in api["utility_functions"] %}
# {{ spec.name }}
cdef GDNativePtrUtilityFunction __utility_{{ spec.name }} = pythonscript_gdapi.variant_get_ptr_utility_function("{{ spec.original_name }}", {{ spec.hash }})
{% endfor %}

##############################################################################
#                                   Classes                                  #
##############################################################################
{# TODO: do lazy function pointer initialization ? #}
{% for spec in api["classes"] %}

{% endfor %}
