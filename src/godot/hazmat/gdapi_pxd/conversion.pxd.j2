cdef object gdvariant_to_pyobject(const gd_variant_t *p_gdvar)
cdef bint pyobject_to_gdvariant(object pyobj, gd_variant_t *p_var)


cdef bint is_pytype_compatible_with_gdvariant(object pytype)
cdef object gdtype_to_pytype(GDNativeVariantType gdtype)
cdef GDNativeVariantType pytype_to_gdtype(object pytype)


cdef extern from "Python.h":
    const char* PyUnicode_AsUTF8AndSize(object, size_t*)
    object PyUnicode_DecodeUTF32(const char *s, size_t size, const char *errors, int *byteorder)


cdef inline gd_string_t gdstring_from_utf8(const char *cstr, size_t cstr_size):
    cdef gd_string_t gdstr
    pythonscript_gdapi.string_new_with_utf8_chars_and_len(&gdstr, cstr, cstr_size)
    return gdstr


cdef inline gd_string_t gdstring_from_unchecked_pystr(object pystr):
    cdef size_t buffsize
    cdef const char *buff = PyUnicode_AsUTF8AndSize(pystr, &buffsize)
    return gdstring_from_utf8(buff, buffsize)


cdef inline object gdstring_to_pystr(gd_string_t *gdstr):
    cdef GDNativeInt l = pythonscript_gdapi.string_to_utf32_chars(gdstr, NULL, 0)
    cdef const char32_t *gdbuff = pythonscript_gdapi.string_operator_index_const(gdstr, 0)
    return PyUnicode_DecodeUTF32(<char *>gdbuff, l * cython.sizeof(char32_t), NULL, NULL)
