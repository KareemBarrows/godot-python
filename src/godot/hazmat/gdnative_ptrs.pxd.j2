# Here are all the function pointers on Godot api for builtins constructor/methods/operators
# and utility functions, this is rather low level stuff so you should use the nice wrappers
# defined in gdapi.pxd.
cimport cython
from libc.stdint cimport *

from .gdextension_interface cimport *


cdef extern from * nogil:
    # Global variables defined in `pythonscript.c`
    # Given `libpythonscript.so` is responsible for initializing the Python
    # interpreter, we are guanteed `pythonscript_gdapi` symbol is always
    # resolved and set to a non-null value \o/
    """
    #include <godot/gdextension_interface.h>
    #ifdef _WIN32
    # define DLL_IMPORT __declspec(dllimport)
    #else
    # define DLL_IMPORT
    #endif
    DLL_IMPORT extern const GDExtensionInterface *pythonscript_gdextension;
    DLL_IMPORT extern GDExtensionClassLibraryPtr pythonscript_gdextension_library;
    DLL_IMPORT extern void pythonscript_gdstringname_new(GDExtensionStringNamePtr ptr, const char *cstr);
    DLL_IMPORT extern void pythonscript_gdstringname_delete(GDExtensionStringNamePtr ptr);
    """
    cdef const GDExtensionInterface *pythonscript_gdextension;
    cdef const GDExtensionClassLibraryPtr pythonscript_gdextension_library;
    cdef void pythonscript_gdstringname_new(GDExtensionStringNamePtr ptr, const char *cstr);
    cdef void pythonscript_gdstringname_delete(GDExtensionStringNamePtr ptr);


##############################################################################
# Function pointers on Godot GDExtension API                                    #
##############################################################################

cdef GDExtensionTypeFromVariantConstructorFunc gd_object_from_variant_ptr
cdef GDExtensionVariantFromTypeConstructorFunc gd_object_into_variant_ptr

cdef GDExtensionTypeFromVariantConstructorFunc gd_bool_from_variant_ptr
cdef GDExtensionVariantFromTypeConstructorFunc gd_bool_into_variant_ptr

cdef GDExtensionTypeFromVariantConstructorFunc gd_int_from_variant_ptr
cdef GDExtensionVariantFromTypeConstructorFunc gd_int_into_variant_ptr

cdef GDExtensionTypeFromVariantConstructorFunc gd_float_from_variant_ptr
cdef GDExtensionVariantFromTypeConstructorFunc gd_float_into_variant_ptr
{% for builtin in api.builtins %}


# {{ builtin.original_name }}
{%   for c in builtin.constructors %}
cdef GDExtensionPtrConstructor {{ builtin.c_name_prefix }}_constructor_{{ c.index }}_ptr
{%   endfor %}
{%   if not builtin.is_stack_only %}
cdef GDExtensionPtrDestructor {{ builtin.c_name_prefix }}_destructor_ptr
{%   endif %}
{%   for m in builtin.methods %}
cdef GDExtensionPtrBuiltInMethod {{ builtin.c_name_prefix }}_meth_{{ m.name }}_ptr
{%   endfor %}
{%   if builtin.indexing_return_type is not none and builtin.is_keyed %}
cdef GDExtensionPtrKeyedSetter {{ builtin.c_name_prefix }}_keyed_setter_ptr
cdef GDExtensionPtrKeyedGetter {{ builtin.c_name_prefix }}_keyed_getter_ptr
{%   endif %}
{%   if builtin.indexing_return_type is not none and not builtin.is_keyed %}
cdef GDExtensionPtrIndexedSetter {{ builtin.c_name_prefix }}_indexed_setter_ptr
cdef GDExtensionPtrIndexedGetter {{ builtin.c_name_prefix }}_indexed_getter_ptr
{%   endif %}
{%   for o in builtin.operators %}
cdef GDExtensionPtrOperatorEvaluator {{ builtin.c_name_prefix }}_op_{{ o.name }}_ptr
{%   endfor %}
{%   for m in builtin.members %}
{%     if not m.is_in_struct %}
cdef GDExtensionPtrSetter {{ builtin.c_name_prefix }}_get_{{ m.name }}_ptr
cdef GDExtensionPtrGetter {{ builtin.c_name_prefix }}_set_{{ m.name }}_ptr
{%     endif %}
{%   endfor %}
cdef GDExtensionTypeFromVariantConstructorFunc {{ builtin.c_name_prefix }}_from_variant_ptr
cdef GDExtensionVariantFromTypeConstructorFunc {{ builtin.c_name_prefix }}_into_variant_ptr
{% endfor %}


{% for utility in api.utility_functions %}
# {{ utility.original_name }}
cdef GDExtensionPtrUtilityFunction gd_utility_{{ utility.original_name }}_ptr
{% endfor %}
